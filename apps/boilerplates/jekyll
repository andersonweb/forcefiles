run_jekyll() {

    BOILERPLATE_DIRECTORY="${HOME}/Sites/jekyll-boilerplate"
    BOILERPLATE_TARBALL_PATH="https://github.com/vitorbritto/jekyll-boilerplate/tarball/master"
    BOILERPLATE_GIT_REMOTE="https://github.com/vitorbritto/jekyll-boilerplate"

    # If missing, download and extract the boilerplate repository
    if [[ ! -d ${BOILERPLATE_DIRECTORY} ]]; then
        printf "$(tput setaf 7)Downloading boilerplate...\033[m\n"
        mkdir ${BOILERPLATE_DIRECTORY}
        # Get the tarball
        curl -fsSLo ${HOME}/jekyll-boilerplate.tar.gz ${BOILERPLATE_TARBALL_PATH}
        # Extract to the boilerplate directory
        tar -zxf ${HOME}/jekyll-boilerplate.tar.gz --strip-components 1 -C ${BOILERPLATE_DIRECTORY}
        # Remove the tarball
        rm -rf ${HOME}/jekyll-boilerplate.tar.gz
    fi

    # Declare my local variables
    local app=$@

    # This guy will rename the project name for what I want
    rename_jekyll_project() {
        echo "Please enter a name for this project (e.g: my-new-project):"
        read -a $app
        mv -f -v jekyll-boilerplate $app && cd $app
    }

    # It will open my editor
    open_jekyll_project() {
        e_header "Opening your editor..."
        subl .
        [[ $? ]] && e_success "Done!"
    }

    # And finally, we initialize the server
    run_jekyll_project() {

        # Ask for remote server
        seek_confirmation "Do you want to watch for file changes?"
        if is_confirmed; then
            e_header "Starting server..."
            jekyll server --watch
        else
            e_header "Starting server..."
            jekyll server
        fi
    }

    # Let's rock!
    rename_jekyll_project
    open_jekyll_project
    run_jekyll_project

}