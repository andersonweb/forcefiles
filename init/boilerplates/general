#!/bin/sh

# Let's start with some settings
BOILERPLATE_DIRECTORY="${HOME}/Sites/projects"
BOILERPLATE_TARBALL_PATH="https://github.com/vitorbritto/boilerplate/tarball/master/general"
LIBS_DIRECTORY="${HOME}/.forcefiles/lib"
source ${LIBS_DIRECTORY}/utils

# If missing, download and extract the boilerplate repository
if [[ ! -d ${BOILERPLATE_DIRECTORY} ]]; then
    printf "$(tput setaf 7)Downloading repository...\033[m\n"
    mkdir ${BOILERPLATE_DIRECTORY}
    # Get the tarball
    curl -fsSLo ${HOME}/boilerplate.tar.gz ${BOILERPLATE_TARBALL_PATH}
    # Extract to the boilerplate directory
    tar -zxf ${HOME}/boilerplate.tar.gz --strip-components 1 -C ${BOILERPLATE_DIRECTORY}
    # Remove the tarball
    rm -rf ${HOME}/boilerplate.tar.gz
fi

# This guy will set up the project
init_config() {

    # Rename the project
    cd ${BOILERPLATE_DIRECTORY}
    printf "\n"
    printf "Please enter a name for this project:"
    printf "\n"
    read -p "Enter your name here: " app
    [[ $? ]] mkdir $app && cd $app

    # Open Sublime
    [[ $? ]] && e_header "Opening your editor..."
    [[ $? ]] && subl .
    [[ $? ]] && e_success "Done!"

    # Install NPM modules
    [[ $? ]] && e_header "Setting up dependencies from NPM..."
    [[ $? ]] && cd src
    [[ $? ]] && npm install
    [[ $? ]] && e_success "Done!"
}

# And finally, start Grunt
init_grunt() {

    seek_confirmation "Do you want to run Grunt now?"

    if is_confirmed; then
        grunt
    fi

    e_success "Done!"
}

# Let's rock!
printf "Please, wait... "
init_config
init_grunt