# Let's start with some settings
BOILERPLATE_DIRECTORY="${HOME}/Sites/projects"
BOILERPLATE_TARBALL_PATH="https://github.com/vitorbritto/boilerplate/tarball/master/launchapp"
LIBS_DIRECTORY="${HOME}/.forcefiles/lib"
source ${LIBS_DIRECTORY}/utils

# If missing, download and extract the boilerplate repository
if [[ ! -d ${BOILERPLATE_DIRECTORY} ]]; then
    printf "$(tput setaf 7)Downloading repository...\033[m\n"
    mkdir ${BOILERPLATE_DIRECTORY}
    # Get the tarball
    curl -fsSLo ${HOME}/boilerplate.tar.gz ${BOILERPLATE_TARBALL_PATH}
    # Extract to the boilerplate directory
    tar -zxf ${HOME}/boilerplate.tar.gz --strip-components 1 -C ${BOILERPLATE_DIRECTORY}
    # Remove the tarball
    rm -rf ${HOME}/boilerplate.tar.gz
fi

# This guy will config my project
config_launch_app() {

    # Rename the project
    cd ${BOILERPLATE_DIRECTORY}
    printf "Please enter a name for this project:"
    printf "\n"
    read -p "Enter your name here: " app
    [[ $? ]] mkdir $app && cd $app

    # Open on Sublime
    [[ $? ]] && e_header "Opening your editor..."
    [[ $? ]] && subl .
    [[ $? ]] && e_success "Done!"

    # Install NPM modules
    [[ $? ]] && e_header "Setting up dependencies from NPM..."
    [[ $? ]] && npm install
    [[ $? ]] && e_success "Done!"
}

# And finally, we initialize the server (or remote server)
# BUT I'm still working on a better alternative with node and socket.io

# server_html_project() {

#     # Ask for remote server
#     seek_confirmation "Do you want to run a remote server?"

#     if is_confirmed; then

#         seek_confirmation "Do you want to run cross-devices testing?"

#         if is_confirmed; then
#             # Using localtunnel for cross-devices testing
#             localtunnel -k ~/.ssh/id_rsa.pub 8080
#             localtunnel 8000
#             e_success "Done! Use the generated url to run your cross-devices testing."

#             # Test using node + socket.io + express
#             # execute with node server.js
#         else
#             # Using PHP Web Server
#             e_header "Please, wait..."
#             php -S 0.0.0.0:8000
#             e_success "Remote server OK! Redirecting you..."
#             open "http://0.0.0.0:8000"
#         fi

#     else
#         e_header "Starting local server..."
#         cd ~/Sites && php -S localhost:8000 -t ${app}/
#         open "http://localhost/${app}:8000"
#     fi
# }

# Let's rock!
printf "Please, wait... "
config_launch_app
# server_html_project