#!/bin/bash

# ------------------------------------------------------------------------------
# | Log Messages                                                               |
# ------------------------------------------------------------------------------


# Header logging
e_header() {
    printf "$(tput setaf 37)$(tput bold)%s$(tput sgr0)\n" "$@"
}

# Success logging
e_success() {
    printf "$(tput setaf 64)✔ %s$(tput sgr0)\n" "$@"
}

# Error logging
e_error() {
    printf "$(tput setaf 1)✖ %s$(tput sgr0)\n" "$@"
}

# Warning logging
e_warning() {
    printf "$(tput setaf 136)! %s$(tput sgr0)\n" "$@"
}

# Ask for confirmation before proceeding
seek_confirmation() {
    printf "\n"
    e_warning "$@"
    read -p "Continue? (y/n) " -n 1
    printf "\n"
}

# Test whether the result of an 'ask' is a confirmation
is_confirmed() {
    if [[ "$REPLY" =~ ^[Yy]$ ]]; then
      return 0
    fi
    return 1
}

# Test whether we're in a git repo
is_git_repo() {
    $(git rev-parse --is-inside-work-tree &> /dev/null)
}

# Test whether a command exists
# $1 - cmd to test
type_exists() {
    if [ $(type -P $1) ]; then
      return 0
    fi
    return 1
}

# Test whether a directory exists
# $1 - cmd to test
dir_exists() {
    if [ $(-d $1) ]; then
      return 0
    fi
    return 1
}

# Test whether a Homebrew formula is already installed
# $1 - formula name (may include options)
formula_exists() {
    if $(brew list $1 >/dev/null); then
        printf "%s already installed.\n" "$1"
        return 0
    fi

    e_warning "Missing formula: $1"
    return 1
}


# ------------------------------------------------------------------------------
# | List what it'll be installed                                               |
# ------------------------------------------------------------------------------

run_list() {

cat <<EOT

------------------------------------------------------------------------------
OS X dotfiles - Vitor Britto - http://www.vitorbritto.com.br
------------------------------------------------------------------------------

This will install/update the following stuff to improve my workflow.


Packages
------------

Brew:
    autoconf
    automake
    libtool
    apple-gcc42
    libyaml
    libxslt
    libksba
    openssl
    coreutils
    findutils
    bash
    bash-completion
    wget
    ack
    tree
    git
    jpeg
    optipng
    imagemagick
    node
    phantomjs
    mongodb
    erlang
    elixir

NPM:
    grunt-cli
    gulp
    bower
    express
    imageoptim-cli
    dalek-cli
    lodash-cli
    ungit
    docpad
    nave
    browserify
    beefy
    shelljs
    uglify-js
    jshint
    csslint
    csscomb
    stylus
    coffee-script
    browser-sync
    karma
    markdown
    pageres
    jade
    harp
    coveralls
    nightwatch

Dependencies:
    Pygments

Rubies:
    Ruby - 1.9.3
    Ruby - 2.0.0

Gems:
    Rails
    Sass
    Compass
    Jekyll
    Showterm
    Bundler
    Capistrano
    Sinatra

PHP:
    Update PHP version from 5.3 to 5.4
    MySQL and phpMyAdmin


Applications
------------

Browsers:
    Firefox Aurora
    Google Chrome Canary

Development:

    Sublime Text
    SourceTree
    FileZilla
    VirtualBox (w/ Vagrant)
    Image Optim

Others:
    Mou
    Alfred
    Dropbox
    Skype
    Transmission
    VLC
    Limechat
    Dash

Sublime:
    Sync data with Dropbox

------------------------------------------------------------------------------

EOT

}


# ------------------------------------------------------------------------------
# | Everybody need some help                                                   |
# ------------------------------------------------------------------------------

run_help() {

cat <<EOT

------------------------------------------------------------------------------
OS X dotfiles - Vitor Britto - http://www.vitorbritto.com.br
------------------------------------------------------------------------------

Usage: $(basename "$0") [options]

Options:
    -h, --help      Print this help text
    -l, --list      Print a list of additional software to install
    --no-packages   Suppress package updates
    --no-sync       Suppress pulling from the remote repository

Documentation can be found at https://github.com/vitorbritto/forcefiles/

Copyright (c) Vitor Britto
Licensed under the MIT license.

------------------------------------------------------------------------------

EOT

}

